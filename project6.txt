
factorialPower(x, exponent):={
  local temp, j;

  if(exponent == 0) {
      return 1;
  }
  else {
      if(exponent > 0) {
           temp := x;
           for(j := 1; j < exponent; j++) {
               temp := temp * (simplify(x - j));
           }
      }
      else {
          exponent := abs(exponent);
          temp := simplify(x + 1);
          for(j := 2; j <= exponent; j++) {
               temp := temp * (simplify(x + j));
          }
          temp := 1 / temp;
      }
  }


  return temp;

}

:;

stirlingS2(n, k):={

  if(n == 0 && k == 0) {
      return 1;
  }

  if(k < 0) {
      return 0;
  }
   
  if(k > n) {
      return 0;
  }
 
  return k * stirlingS2(n - 1, k) +  stirlingS2(n - 1, k - 1);

}

:;

Summation(x, lower, upper):={
  local j, temp_sum;

  temp_sum := 0;

  for(j := 0; j < x + 1; j++) {
      temp_sum := temp_sum + stirlingS2(x, j) * ((factorialPower(upper, j + 1) / (j + 1)) - (factorialPower(lower, j + 1) / (j + 1)));    
  }

  return simplify(temp_sum);

}

:;